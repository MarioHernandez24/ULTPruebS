// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ULTPruebS.Server.Models;

#nullable disable

namespace ULTPruebS.Server.Migrations
{
    [DbContext(typeof(FerreteriaDContext))]
    partial class FerreteriaDContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ULTPruebS.Server.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreCategoria");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C320A2DCD");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<string>("Cliente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("date")
                        .HasColumnName("fechaCompra");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    b.Property<int?>("Producto1IdProducto1")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCompra")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("totalCompra");

                    b.HasKey("IdCompra")
                        .HasName("PK__Compra__48B99DB790F96C9C");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("Producto1IdProducto1");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.DetalleCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleCompra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCompra"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("idCompra");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("SubtotalCompra")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("subtotalCompra");

                    b.HasKey("IdDetalleCompra")
                        .HasName("PK__DetalleC__62C252C1706291BF");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleCompra", (string)null);
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("IdProducto1")
                        .HasColumnType("int");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal?>("Iva")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("IVA");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("TasaIva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("TasaIVA")
                        .HasDefaultValueSql("((15))");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DetalleV__AAA5CEC2F5BAFBFD");

                    b.HasIndex("IdProducto1");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFactura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<string>("DetallesFactura")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("detallesFactura");

                    b.Property<string>("EstadoFactura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estadoFactura");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaFactura");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<string>("MontoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("montoPago");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("montoTotal");

                    b.HasKey("IdFactura")
                        .HasName("PK__Factura__3CD5687EA64451B0");

                    b.HasIndex("IdVenta");

                    b.ToTable("Factura", (string)null);
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Factura1", b =>
                {
                    b.Property<int>("IdFactura1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFactura1");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFactura1"));

                    b.Property<decimal?>("DescuentoTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("FechaEmision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<decimal>("Iva")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("IVA");

                    b.Property<string>("NumeroFactura")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("TotalFactura")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdFactura1")
                        .HasName("PK__Factura1__69F30A4E0B661EE4");

                    b.HasIndex("IdVenta");

                    b.ToTable("Factura1", (string)null);
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Inventario", b =>
                {
                    b.Property<int>("IdInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idInventario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInventario"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("categoria");

                    b.Property<string>("Codigo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigo");

                    b.Property<string>("Detalle")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("detalle");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("estado");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.HasKey("IdInventario")
                        .HasName("PK__Inventar__1927B20C15596615");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProducto");

                    b.ToTable("Inventario", (string)null);
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Producto1", b =>
                {
                    b.Property<int>("IdProducto1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto1"));

                    b.Property<string>("Caracteristicas")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("caracteristicas");

                    b.Property<string>("Detalle")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("detalle");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<decimal>("Ganancia")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ganancia");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    b.Property<int?>("IdUnidad")
                        .HasColumnType("int")
                        .HasColumnName("idUnidad");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("PrecioCompra")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("precioCompra");

                    b.Property<decimal?>("PrecioVenta")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("precioVenta");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<int?>("StockMinimo")
                        .HasColumnType("int")
                        .HasColumnName("stockMinimo");

                    b.HasKey("IdProducto1")
                        .HasName("PK__Producto__09889210B9C022A2");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdUnidad");

                    b.ToTable("Producto1", (string)null);
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("DireccionEmpresa")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("direccionEmpresa");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreProveedor");

                    b.Property<string>("NumeroRuc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("numeroRUC");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("telefono");

                    b.HasKey("IdProveedor")
                        .HasName("PK__Proveedo__A3FA8E6BA1265FF4");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Reporte", b =>
                {
                    b.Property<int>("IdReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idReporte");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReporte"));

                    b.Property<decimal?>("Cambio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Cliente")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("DetallesReporte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("detallesReporte");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal?>("Iva")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("IVA");

                    b.Property<string>("MetodoPago")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("MontoPagado")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("periodo");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TipoReporte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoReporte");

                    b.Property<string>("TipoTransaccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdReporte")
                        .HasName("PK__Reporte__40D65D3CD4B8CA30");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdVenta");

                    b.ToTable("Reporte", (string)null);
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.UnidadMedida", b =>
                {
                    b.Property<int>("IdUnidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUnidad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnidad"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<string>("NombreUnidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreUnidad");

                    b.Property<string>("Simbolo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("simbolo");

                    b.Property<string>("TipoUnidad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoUnidad");

                    b.HasKey("IdUnidad")
                        .HasName("PK__UnidadMe__34C1E8D7910C944C");

                    b.ToTable("UnidadMedida");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.UserRole", b =>
                {
                    b.Property<int>("idUserRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUserRole"));

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idUserRole");

                    b.HasIndex("idUsuario");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContraseñaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3214EC07D1102700");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<decimal?>("Cambio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Cliente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("DescuentoTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("FechaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaVenta")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("MontoPagado")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Producto1IdProducto1")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta1__BC1240BD58321FB8");

                    b.HasIndex("Producto1IdProducto1");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Compra", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK__Compra__idProvee__48CFD27E");

                    b.HasOne("ULTPruebS.Server.Models.Producto1", null)
                        .WithMany("Compras")
                        .HasForeignKey("Producto1IdProducto1");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.DetalleCompra", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Compra", "IdCompraNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("IdCompra")
                        .IsRequired()
                        .HasConstraintName("FK_DetalleCompra_Compra");

                    b.HasOne("ULTPruebS.Server.Models.Producto1", "IdProductoNavigation")
                        .WithMany("DetalleCompras")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_DetalleCompra_Producto1");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.DetalleVenta", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Producto1", "IdProducto1Navigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto1")
                        .HasConstraintName("FK_DetalleVenta_Producto1");

                    b.HasOne("ULTPruebS.Server.Models.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__DetalleVe__IdVen__09A971A2");

                    b.Navigation("IdProducto1Navigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Factura", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Venta", "IdVentaNavigation")
                        .WithMany("Facturas")
                        .HasForeignKey("IdVenta")
                        .IsRequired()
                        .HasConstraintName("FK_Factura_Venta");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Factura1", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Venta", "IdVentaNavigation")
                        .WithMany("Factura1s")
                        .HasForeignKey("IdVenta")
                        .IsRequired()
                        .HasConstraintName("FK__Factura1__idVent__2180FB33");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Inventario", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Categoria", "IdCategoriaNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_Inventario_Categoria");

                    b.HasOne("ULTPruebS.Server.Models.Producto1", "IdProductoNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Inventario_Producto");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Producto1", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Categoria", "IdCategoriaNavigation")
                        .WithMany("Producto1s")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_Producto1_Categoria");

                    b.HasOne("ULTPruebS.Server.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("Producto1s")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_Producto1_Proveedor");

                    b.HasOne("ULTPruebS.Server.Models.UnidadMedida", "IdUnidadNavigation")
                        .WithMany("Producto1s")
                        .HasForeignKey("IdUnidad")
                        .HasConstraintName("FK_Producto1_Unidad");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdUnidadNavigation");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Reporte", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Compra", "IdCompraNavigation")
                        .WithMany("Reportes")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK_Reporte_Compra");

                    b.HasOne("ULTPruebS.Server.Models.Venta", "IdVentaNavigation")
                        .WithMany("Reportes")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK_Reporte_Venta");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.UserRole", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Usuario", "Usuario")
                        .WithMany("UserRoles")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Venta", b =>
                {
                    b.HasOne("ULTPruebS.Server.Models.Producto1", null)
                        .WithMany("Ventas")
                        .HasForeignKey("Producto1IdProducto1");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Categoria", b =>
                {
                    b.Navigation("Inventarios");

                    b.Navigation("Producto1s");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Compra", b =>
                {
                    b.Navigation("DetalleCompras");

                    b.Navigation("Reportes");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Producto1", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("DetalleCompras");

                    b.Navigation("DetalleVenta");

                    b.Navigation("Inventarios");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Proveedor", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Producto1s");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.UnidadMedida", b =>
                {
                    b.Navigation("Producto1s");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Usuario", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ULTPruebS.Server.Models.Venta", b =>
                {
                    b.Navigation("DetalleVenta");

                    b.Navigation("Factura1s");

                    b.Navigation("Facturas");

                    b.Navigation("Reportes");
                });
#pragma warning restore 612, 618
        }
    }
}
