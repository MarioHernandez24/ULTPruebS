@page "/unidadmedida"
@page "/unidadmedida/{idUnidadEditar:int}"

@using ULTPruebS.Shared;
@using ULTPruebS.Client.Service;

@inject IUnidadMedidaService unidadMedidaService;
@inject NavigationManager navegacion;

<PageTitle>@titulo</PageTitle>

<style>
    .card {
        border: 2px solid #68217A; /* Color morado similar al predeterminado de Blazor */
        border-radius: 8px; /* Bordes redondeados */
        margin-top: 20px;
    }

    .card-header {
        background-color: #68217A; /* Fondo morado para el encabezado de la tarjeta */
        color: white; /* Texto blanco en el encabezado */
        padding: 10px;
        border-bottom: 2px solid #4b154a; /* Bordes morados más oscuros para separar el encabezado del cuerpo */
    }

    .card-body {
        padding: 20px;
    }

    .form-label {
        font-weight: bold; /* Resaltar las etiquetas */
    }

    .form-control, .form-select {
        border-color: #68217A; /* Bordes morados para inputs y selects */
    }

        .form-control:focus, .form-select:focus {
            box-shadow: 0 0 0 0.2rem rgba(104, 33, 122, 0.25); /* Sombra morada para el foco */
            border-color: #68217A;
        }

    .btn-primary {
        background-color: #68217A; /* Color de fondo morado para el botón */
        border-color: #68217A; /* Borde morado para el botón */
    }

        .btn-primary:hover {
            background-color: #4b154a; /* Color morado más oscuro al pasar el cursor */
            border-color: #4b154a;
        }

    .btn-success {
        background-color: #28a745; /* Botón verde de Bootstrap */
        border-color: #28a745;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    .btn-warning {
        background-color: #ffc107; /* Botón amarillo de Bootstrap */
        border-color: #ffc107;
    }

        .btn-warning:hover {
            background-color: #e0a800;
            border-color: #d39e00;
        }

    .alert-success {
        background-color: #d4edda; /* Fondo verde claro para el mensaje de éxito */
        color: #155724; /* Texto verde oscuro */
        border-color: #c3e6cb; /* Borde verde claro */
    }
</style>

<div class="card mt-4">
    <div class="card-header">
        @titulo
    </div>
    <div class="card-body">
        <EditForm Model="unidadMedida" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <div class="mb-3">
                <label class="form-label">Nombre Unidad</label>
                <InputText class="form-control" @bind-Value="unidadMedida.NombreUnidad"></InputText>
                <ValidationMessage For="@(() => unidadMedida.NombreUnidad)"></ValidationMessage>
            </div>
            <div class="mb-3">
                <label class="form-label">Símbolo</label>
                <InputText class="form-control" @bind-Value="unidadMedida.Simbolo"></InputText>
                <ValidationMessage For="@(() => unidadMedida.Simbolo)"></ValidationMessage>
            </div>
            <div class="mb-3">
                <label class="form-label">Descripción</label>
                <InputText class="form-control" @bind-Value="unidadMedida.Descripcion"></InputText>
                <ValidationMessage For="@(() => unidadMedida.Descripcion)"></ValidationMessage>
            </div>
            <div class="mb-3">
                <label class="form-label">Tipo Unidad</label>
                <InputText class="form-control" @bind-Value="unidadMedida.TipoUnidad"></InputText>
                <ValidationMessage For="@(() => unidadMedida.TipoUnidad)"></ValidationMessage>
            </div>

            <div class="button-group">
                <button class="btn btn-primary" type="submit">
                    @btnTexto
                </button>

                <button class="btn btn-warning" type="button" @onclick="Volver">
                    Volver
                </button>
            </div>

            @if (!string.IsNullOrEmpty(mensaje))
            {
                <div class="alert alert-success" role="alert">
                    @mensaje
                </div>
            }
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int idUnidadEditar { get; set; } = 0;

    string titulo = string.Empty;
    string btnTexto = string.Empty;
    string mensaje = string.Empty;

    UnidadMedidaDTO unidadMedida = new UnidadMedidaDTO();

    protected override async Task OnInitializedAsync()
    {
        if (idUnidadEditar != 0)
        {
            unidadMedida = await unidadMedidaService.Buscar(idUnidadEditar);
            btnTexto = "Actualizar Unidad de Medida";
            titulo = "Editar Unidad de Medida";
        }
        else
        {
            unidadMedida = new UnidadMedidaDTO
                {
                    NombreUnidad = "",
                    Simbolo = "",
                    Descripcion = "",
                    TipoUnidad = ""
                };
            btnTexto = "Guardar Unidad de Medida";
            titulo = "Nueva Unidad de Medida";
        }
    }

    private async Task OnValidSubmit()
    {
        int idDevuelto = 0;
        if (idUnidadEditar == 0)
        {
            idDevuelto = await unidadMedidaService.Guardar(unidadMedida);
            mensaje = "Unidad de Medida guardada exitosamente.";
        }
        else
        {
            idDevuelto = await unidadMedidaService.Editar(unidadMedida);
            mensaje = "Unidad de Medida actualizada exitosamente.";
        }

        if (idDevuelto != 0)
        {
            navegacion.NavigateTo("/unidadesmedida");
        }
    }

    private void Volver()
    {
        navegacion.NavigateTo("/unidadesmedida");
    }
}
